name: CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: Build job
    runs-on: windows-latest
    outputs:
      Version: ${{ steps.gitversion.outputs.MajorMinorPatch }}
      CommitsSinceVersionSource: ${{ steps.gitversion.outputs.CommitsSinceVersionSource }}
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Setup GitVersion
      uses: gittools/actions/gitversion/setup@v4.0.1
      with:
        versionSpec: 6.x
    - name: Determine Version
      id: gitversion
      uses: gittools/actions/gitversion/execute@v4.0.1
    - name: Display GitVersion outputs
      run: |
        echo "Version: ${{ steps.gitversion.outputs.MajorMinorPatch }}"
        echo "CommitsSinceVersionSource: ${{ steps.gitversion.outputs.CommitsSinceVersionSource }}"
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: .NET test
      run: dotnet test src/CardGames.Tests/CardGames.Tests.csproj -c Debug -e:CollectCoverage=true -e:CoverletOutput=${{ github.workspace }}/TestResults/ -e:CoverletOutputFormat=lcov # using -e parameter to set an environment variable until the /p parameter is fixed: https://github.com/coverlet-coverage/coverlet/issues/1391
    - name: Coveralls
      uses: coverallsapp/github-action@v2.3.0
      if: false
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        path-to-lcov: ${{ github.workspace }}/TestResults/coverage.info    
    - name: .NET publish
      run: dotnet publish src/CardGames.Core/CardGames.Core.csproj -c Release -p:Version='${{ steps.gitversion.outputs.MajorMinorPatch }}'
    - name: Upload package back to GitHub
      uses: actions/upload-artifact@v4
      with:
        name: drop
        path: src/CardGames.Core/bin/Release/netstandard2.1
